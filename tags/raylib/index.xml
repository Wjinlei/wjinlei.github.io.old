<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raylib on Jerry&#39;s Blog</title>
    <link>http://wjinlei.github.io/tags/raylib/</link>
    <description>Recent content in raylib on Jerry&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 05 Jul 2022 21:10:41 +0800</lastBuildDate><atom:link href="http://wjinlei.github.io/tags/raylib/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go 游戏开发学习笔记(五)-动画</title>
      <link>http://wjinlei.github.io/posts/code-go-raylib-5/</link>
      <pubDate>Tue, 05 Jul 2022 21:10:41 +0800</pubDate>
      
      <guid>http://wjinlei.github.io/posts/code-go-raylib-5/</guid>
      <description>&lt;p&gt;动画实际就是一帧一帧的图片，然后根据一定的帧率一帧一帧的循环绘制在屏幕上。&lt;/p&gt;
&lt;p&gt;例如我们的角色图片实际上在系统里是下面这样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://wjinlei.github.io/images/code-go-raylib-5/cat.png&#34; alt=&#34;人物图片&#34;&gt;&lt;/p&gt;
&lt;p&gt;图片里的猫咪，实际上宽度是&lt;code&gt;48x48&lt;/code&gt;，一行是4列，我们之前通过 &lt;code&gt;rl.DrawTexturePro&lt;/code&gt; 函数画了这张图片的一部分，&lt;/p&gt;
&lt;p&gt;也就是第一行的第一列，也就成了我们看到的那个不会动的猫，现在我们需要让它能够动起来，&lt;/p&gt;
&lt;p&gt;假如我们想让人物向右行走，我们就需要画第四列，每一帧就向右画一个人物图片的宽度偏移量，&lt;/p&gt;
&lt;p&gt;画到第四张图片的时候，就让它重置，然后又从第一张开始画，这样就达到了动画的效果&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go 游戏开发学习笔记(四)-创建相机</title>
      <link>http://wjinlei.github.io/posts/code-go-raylib-4/</link>
      <pubDate>Mon, 04 Jul 2022 21:36:09 +0800</pubDate>
      
      <guid>http://wjinlei.github.io/posts/code-go-raylib-4/</guid>
      <description>&lt;p&gt;在之前的小节中，我们创建了一个精灵，并且可以控制精灵的移动，但我们的屏幕并没有随着精灵的移动而移动，这个所谓的屏幕就是&lt;code&gt;相机&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://wjinlei.github.io/images/code-go-raylib-2/running.gif&#34; alt=&#34;效果&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以，这一节，我们将创建一个跟随人物移动而移动的相机&lt;/p&gt;
&lt;p&gt;首先，我们创建一个变量 &lt;code&gt;cam&lt;/code&gt; 它代表一个相机对象，它的类型是 &lt;code&gt;rl.Camera2D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后我们在 &lt;code&gt;init()&lt;/code&gt; 函数中创建这个相机，然后在 &lt;code&gt;update()&lt;/code&gt; 函数中更新相机的目标位置，最后在 &lt;code&gt;render()&lt;/code&gt; 中2D模式&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go 游戏开发学习笔记(三)-播放音乐</title>
      <link>http://wjinlei.github.io/posts/code-go-raylib-3/</link>
      <pubDate>Mon, 04 Jul 2022 20:09:40 +0800</pubDate>
      
      <guid>http://wjinlei.github.io/posts/code-go-raylib-3/</guid>
      <description>&lt;p&gt;任何一款游戏中，音乐是必不可少的，好的音乐能为游戏带来更好的体验，&lt;/p&gt;
&lt;p&gt;游戏中的音效分很多种，常见的有战斗音效，环境音效，场景音效等等，今天我们就来学习如何在&lt;code&gt;Raylib&lt;/code&gt;中播放音乐&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go 游戏开发学习笔记(二)-创建精灵</title>
      <link>http://wjinlei.github.io/posts/code-go-raylib-2/</link>
      <pubDate>Sun, 03 Jul 2022 22:20:03 +0800</pubDate>
      
      <guid>http://wjinlei.github.io/posts/code-go-raylib-2/</guid>
      <description>&lt;p&gt;不知你是否意识到，所有的游戏都有 精灵(Sprite) 对象，什么是精灵？&lt;/p&gt;
&lt;p&gt;引用知乎上&lt;a href=&#34;https://www.zhihu.com/question/435692887/answer/1712676699&#34;&gt;程墨的回答&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上世纪70年代，在德州电器公司，一个叫Daniel Hillis的前辈最早把Sprite这个词用在计算机图形上，在展示界面上，有一些东西在实现层面并不是和整个画面融为一体的，而是『漂浮』在其他画面之上，像『幽灵』一样，所以被称为Sprite。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Go 游戏开发学习笔记(一)-创建窗口</title>
      <link>http://wjinlei.github.io/posts/code-go-raylib-1/</link>
      <pubDate>Sun, 03 Jul 2022 14:56:46 +0800</pubDate>
      
      <guid>http://wjinlei.github.io/posts/code-go-raylib-1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.raylib.com/&#34;&gt;Raylib&lt;/a&gt;是一个简单易用的跨平台的游戏绘图库，Raylib 有+60多种语言的&lt;a href=&#34;https://github.com/raysan5/raylib/blob/master/BINDINGS.md&#34;&gt;绑定&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
